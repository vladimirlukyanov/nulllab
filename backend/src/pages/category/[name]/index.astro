---
import { getCollection } from 'astro:content'
import CategoryLayout from '../../../layouts/category.astro'
import { Image } from 'astro:assets'
import LayoutBlog from '../../../layouts/blog.astro'
import {words_limit} from "~/utils/text";

export async function getStaticPaths () {

  const posts = (await getCollection('blog')).sort(
    (a, b) => b.data.published_date.valueOf() - a.data.published_date.valueOf(),
  )

  const categories = await getCollection('categories')

  return categories.map((category) => {

    return {
      params: { name: category.id },
      props: {
        category: category,
        posts: posts.filter((post) => {
          return post.data.categories.some(cat => cat.id === category.id)
        }),
      },
    }
  })
}

const { category, posts } = Astro.props
---

<CategoryLayout title={category.data.title}
                description={category.data.description}
                featured_image={category.data?.image?.url}>
    <div class="categories">
        <div class="container xxl">
            <div class="category_header">
                <div>
                    <div class="name">
                        <svg xmlns="http://www.w3.org/2000/svg" width="18"
                             height="18" viewBox="0 0 18 18" class="icon">
                            <path fill="red" fill-rule="evenodd"
                                  d="M2 4h14l-3.063 5L16 14H2z"></path>
                        </svg>
                        <span>
                            CATEGORY
                        </span>
                    </div>
                    <div class="title">
                      {category.data.title}
                    </div>
                </div>
            </div>
            <div class="grid">
                <div class="posts">
                  {
                    posts.length > 10 ? posts.slice(0, 9).map((post) => {

                      // @TODO fix line-height font issue

                      return (
                              <div class="post">
                                {post.data.image?.url &&
                                        <div class="left">
                                            <a href={`/${post.id.substring(
                                              5)}/`} title={post.data.title}>
                                                <Image src={post.data.image?.url}
                                                       alt={'11'} class="image"
                                                       width={390}
                                                       fit={'cover'}
                                                />
                                            </a>
                                        </div>
                                }
                                  <div class="right">
                                      <h3>
                                          <a href={`/${post.id.substring(5)}/`}
                                             title={post.data.title}
                                             class="title">
                                            {post.data.title}
                                          </a>
                                      </h3>
                                      <div>
                                          <span class="description">{words_limit(post.data.description, 60, {
                                              appendEllipsis: true
                                          })}</span>
                                          <time class="date"
                                                datetime={post.data.published_date.toISOString()}>
                                            {
                                              post.data.published_date.toLocaleDateString(
                                                'en-us', {
                                                  year: 'numeric',
                                                  month: 'short',
                                                  day: 'numeric',
                                                })
                                            }
                                          </time>
                                      </div>
                                  </div>
                              </div>
                      )
                    }) : posts.map((post) => {

                      // @TODO fix line-height font issue

                      return (
                              <div class="post">
                                {post.data.image?.url &&
                                        <div class="left">
                                            <a href={`/${post.id.substring(
                                              5)}/`} title={post.data.title}>
                                                <Image src={post.data.image?.url}
                                                       alt={'11'} class="image"
                                                       width={390}
                                                       fit={'cover'}
                                                />
                                            </a>
                                        </div>
                                }
                                  <div class="right">
                                      <h3>
                                          <a href={`/${post.id.substring(5)}/`}
                                             title={post.data.title}
                                             class="title">
                                            {post.data.title}
                                          </a>
                                      </h3>
                                      <div>
                                          <span class="description">{words_limit(post.data.description, 60, {
                                              appendEllipsis: true
                                          })}</span>
                                          <time class="date"
                                                datetime={post.data.published_date.toISOString()}>
                                            {
                                              post.data.published_date.toLocaleDateString(
                                                'en-us', {
                                                  year: 'numeric',
                                                  month: 'short',
                                                  day: 'numeric',
                                                })
                                            }
                                          </time>
                                      </div>
                                  </div>
                              </div>
                      )
                    })
                  }
                  {posts.length > 10 &&
                          <nav class="pagination" aria-label="Pagination"
                               style="--xii-pagination-grid-template-columns: 100px 1fr 100px">
                              <div class="left">
                                  <button class="btn">Previous</button>
                              </div>
                              <div class="center">
                                  <p>Showing 1 to 10 of {posts.length}
                                      results</p>
                              </div>
                              <div class="right">
                                  <a href={`/category/${category.id}/2`}
                                     class="btn">Next</a>
                              </div>
                          </nav>
                  }
                </div>
                <div class="sidebar">
                  {category.data.description}
                </div>
            </div>
        </div>
    </div>
</CategoryLayout>

<style lang="scss">
  @use "sass:list";
  @use "sass:string";
  @use "sass:meta";
  @use "sass:map";

  @use "../../../styles/app.scss" as app;

  @use "../../../styles/scss/mixins.scss" as mixins;
  @use "../../../styles/scss/functions.scss" as functions;

  $category_header: (
    display: flex,
    width: 100%,
    justify-content: center,
    text-align: center,
    margin: 0 0 25px 0,
    _subclasses: (
      '.name' : (
        display: inline-flex,
        align-items: center,
        gap: 5px,
        _subclasses : (
          '.icon' : (
            margin-top: 2px,
          )
        )
      ),
      '.title' : (
        font-size: 3rem,
        text-transform: capitalize,
        font-weight: 600,
      )
    )
  );

  @include mixins.generate-component(
      $category_header,
      'category_header',
      app.$config,
      app.$theme
  );
</style>

<style lang="scss">
  @use "sass:list";
  @use "sass:string";
  @use "sass:meta";
  @use "sass:map";

  @use "../../../styles/app.scss" as app;

  @use "../../../styles/scss/mixins.scss" as mixins;
  @use "../../../styles/scss/functions.scss" as functions;

  $categories: (
    margin: 25px 0,
    _subclasses: (
      /***/
      '.grid' : (
        display: grid,
        width: 100%,
        grid-template-columns: 1fr,
        grid-auto-rows: auto,
        grid-gap: 1rem,
        _responsive: (
          md: (
            grid-template-columns: 1.4fr 0.6fr,
            grid-gap: 1rem,
          ),
        ),
        _subclasses: (
          /***/
          '.posts' : (
            _subclasses: (
              /***/
              '.post' : (
                display: grid,
                grid-template-columns: 1fr,
                grid-gap: 1rem,
                margin: 0 0 2rem 0,
                /***/
                _responsive : (
                    md: (
                      grid-template-columns: minmax(250px, 350px) 1fr,
                      grid-gap: 1rem,
                    )
                ),
                /***/
                _subclasses: (
                  /***/
                  '&:last-child' : (
                    margin: 0,
                  ),
                  '.left' : (
                    _subclasses: (
                      '.image' : (
                        border-radius: 0.5rem,
                        box-shadow: string.unquote('rgba(0, 0, 0, 0) 0px 0px 0px 0px, rgba(0, 0, 0, 0) 0px 0px 0px 0px, rgba(0, 0, 0, 0) 0px 0px 0px 0px, rgba(0, 0, 0, 0) 0px 0px 0px 0px, rgba(0, 0, 0, 0.1) 0px 4px 6px -1px, rgba(0, 0, 0, 0.1) 0px 2px 4px -2px'),
                      )
                    )
                  ),
                  '.right' : (
                    /***/
                    _subclasses: (
                      /***/
                      '.title': (
                        font-size: 2rem,
                        line-height: 1.5rem,
                        margin: 0 0 15px 0,
                        display: inline-block,
                      ),
                      '.description': (
                        display: flex,
                        align-items: center,
                        margin: 0 0 10px 0,
                        line-height: clamp(1.25em, 4vw, 1.5em),
                      ),
                      '.date': (
                        display: block,
                        color: #878181,
                      ),
                    )
                  )
                )
              ),
            ),
          ),
          '.sidebar': (
          )
        ),
      ),
    )
  );

  @include mixins.generate-component(
      $categories,
      'categories',
      app.$config,
      app.$theme
  );
</style>

<style lang="scss">
  @use "sass:list";
  @use "sass:meta";

  @use "~/styles/app.scss" as app;

  $config: app.$config;
  $theme: app.$theme;

  @use "~/styles/scss/components/pagination" with (
    $config: $config,
    $theme: $theme
  );
</style>